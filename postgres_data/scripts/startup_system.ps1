# –°–æ–∑–¥–∞–π—Ç–µ master —Å–∫—Ä–∏–ø—Ç –∑–∞–ø—É—Å–∫–∞ –≤—Å–µ–π —Å–∏—Å—Ç–µ–º—ã
@'
# –ì–ª–∞–≤–Ω—ã–π —Å–∫—Ä–∏–ø—Ç –∞–≤—Ç–æ–∑–∞–ø—É—Å–∫–∞ –º–∏–∫—Ä–æ—Å–µ—Ä–≤–∏—Å–∞
param([switch]$Silent)

$ErrorActionPreference = "Continue"

if (-not $Silent) {
    Write-Host "üöÄ –ê–í–¢–û–ó–ê–ü–£–°–ö –ú–ò–ö–†–û–°–ï–†–í–ò–°–ê –°–¢–ê–¢–ò–°–¢–ò–ö–ò –ë–û–¢–û–í" -ForegroundColor Green
    Write-Host "===========================================" -ForegroundColor Green
}

# –û–ø—Ä–µ–¥–µ–ª—è–µ–º –ø—É—Ç–∏ –ø—Ä–æ–µ–∫—Ç–∞
$projectRoot = $PSScriptRoot
while ($projectRoot.Parent -and -not (Test-Path (Join-Path $projectRoot "requirements.txt"))) {
    $projectRoot = $projectRoot.Parent
}
if (-not (Test-Path (Join-Path $projectRoot "requirements.txt"))) {
    $projectRoot = Split-Path $PSScriptRoot -Parent | Split-Path -Parent
}

Set-Location $projectRoot.Path
if (-not $Silent) { Write-Host "üìÅ –ö–æ—Ä–µ–Ω—å –ø—Ä–æ–µ–∫—Ç–∞: $($projectRoot.Path)" -ForegroundColor Cyan }

# –®–∞–≥ 1: –ü—Ä–æ–≤–µ—Ä–∫–∞ –∏ –∑–∞–ø—É—Å–∫ Docker
if (-not $Silent) { Write-Host "üê≥ –ü—Ä–æ–≤–µ—Ä—è–µ–º Docker..." -ForegroundColor Yellow }
$dockerRunning = Get-Process "Docker Desktop" -ErrorAction SilentlyContinue
if (-not $dockerRunning) {
    if (-not $Silent) { Write-Host "‚ö†Ô∏è  Docker –Ω–µ –∑–∞–ø—É—â–µ–Ω. –û–∂–∏–¥–∞–µ–º –∑–∞–ø—É—Å–∫–∞..." -ForegroundColor Yellow }
    Start-Process "C:\Program Files\Docker\Docker\Docker Desktop.exe" -WindowStyle Hidden
    
    # –ñ–¥–µ–º –∑–∞–ø—É—Å–∫–∞ Docker (–¥–æ 60 —Å–µ–∫—É–Ω–¥)
    $timeout = 60
    do {
        Start-Sleep -Seconds 5
        $timeout -= 5
        $dockerCheck = docker ps 2>$null
    } while ((-not $dockerCheck) -and ($timeout -gt 0))
    
    if ($timeout -le 0) {
        Write-Host "‚ùå Docker –Ω–µ –∑–∞–ø—É—Å—Ç–∏–ª—Å—è –≤ —Ç–µ—á–µ–Ω–∏–µ 60 —Å–µ–∫—É–Ω–¥" -ForegroundColor Red
        exit 1
    }
}

# –®–∞–≥ 2: –ü—Ä–æ–≤–µ—Ä–∫–∞ PostgreSQL –∫–æ–Ω—Ç–µ–π–Ω–µ—Ä–∞
if (-not $Silent) { Write-Host "üóÑÔ∏è  –ü—Ä–æ–≤–µ—Ä—è–µ–º PostgreSQL –∫–æ–Ω—Ç–µ–π–Ω–µ—Ä..." -ForegroundColor Yellow }
$containerStatus = docker ps --filter "name=proxy_stats_db" --format "{{.Status}}" 2>$null

if (-not $containerStatus) {
    if (-not $Silent) { Write-Host "üîÑ –ó–∞–ø—É—Å–∫–∞–µ–º PostgreSQL –∫–æ–Ω—Ç–µ–π–Ω–µ—Ä..." -ForegroundColor Yellow }
    docker start proxy_stats_db
    if ($LASTEXITCODE -ne 0) {
        Write-Host "‚ùå –û—à–∏–±–∫–∞ –∑–∞–ø—É—Å–∫–∞ –∫–æ–Ω—Ç–µ–π–Ω–µ—Ä–∞ PostgreSQL" -ForegroundColor Red
        exit 1
    }
}

# –®–∞–≥ 3: –û–∂–∏–¥–∞–Ω–∏–µ –≥–æ—Ç–æ–≤–Ω–æ—Å—Ç–∏ PostgreSQL (–¥–æ 30 —Å–µ–∫—É–Ω–¥)
if (-not $Silent) { Write-Host "‚è≥ –û–∂–∏–¥–∞–µ–º –≥–æ—Ç–æ–≤–Ω–æ—Å—Ç–∏ PostgreSQL..." -ForegroundColor Yellow }
$dbTimeout = 30
do {
    Start-Sleep -Seconds 2
    $dbTimeout -= 2
    $dbReady = docker exec proxy_stats_db pg_isready -U admin 2>$null
} while (($LASTEXITCODE -ne 0) -and ($dbTimeout -gt 0))

if ($dbTimeout -le 0) {
    Write-Host "‚ùå PostgreSQL –Ω–µ –≥–æ—Ç–æ–≤ –≤ —Ç–µ—á–µ–Ω–∏–µ 30 —Å–µ–∫—É–Ω–¥" -ForegroundColor Red
    exit 1
}

if (-not $Silent) { Write-Host "‚úÖ PostgreSQL –≥–æ—Ç–æ–≤ –∫ —Ä–∞–±–æ—Ç–µ" -ForegroundColor Green }

# –®–∞–≥ 4: –ê–≤—Ç–æ–º–∞—Ç–∏—á–µ—Å–∫–∞—è –ø—Ä–æ–≤–µ—Ä–∫–∞ –∏ –≤–æ—Å—Å—Ç–∞–Ω–æ–≤–ª–µ–Ω–∏–µ –±–∞–∑—ã –¥–∞–Ω–Ω—ã—Ö
if (-not $Silent) { Write-Host "üîç –ó–∞–ø—É—Å–∫–∞–µ–º –ø—Ä–æ–≤–µ—Ä–∫—É —Å–æ—Å—Ç–æ—è–Ω–∏—è –±–∞–∑—ã –¥–∞–Ω–Ω—ã—Ö..." -ForegroundColor Yellow }

$checkScript = Join-Path $projectRoot.Path "postgres_data\scripts\check_and_restore.ps1"
if (Test-Path $checkScript) {
    & $checkScript
    if ($LASTEXITCODE -ne 0) {
        Write-Host "‚ùå –û—à–∏–±–∫–∞ –ø—Ä–∏ –ø—Ä–æ–≤–µ—Ä–∫–µ/–≤–æ—Å—Å—Ç–∞–Ω–æ–≤–ª–µ–Ω–∏–∏ –±–∞–∑—ã –¥–∞–Ω–Ω—ã—Ö" -ForegroundColor Red
        exit 1
    }
} else {
    Write-Host "‚ö†Ô∏è  –°–∫—Ä–∏–ø—Ç –ø—Ä–æ–≤–µ—Ä–∫–∏ –±–∞–∑—ã –Ω–µ –Ω–∞–π–¥–µ–Ω: $checkScript" -ForegroundColor Yellow
}

# –®–∞–≥ 5: –ü—Ä–∏–º–µ–Ω–µ–Ω–∏–µ –º–∏–≥—Ä–∞—Ü–∏–π Alembic
if (-not $Silent) { Write-Host "üîÑ –ü—Ä–∏–º–µ–Ω—è–µ–º –º–∏–≥—Ä–∞—Ü–∏–∏ –±–∞–∑—ã –¥–∞–Ω–Ω—ã—Ö..." -ForegroundColor Yellow }
if (Test-Path ".venv\Scripts\activate.ps1") {
    & .venv\Scripts\activate.ps1
    alembic upgrade head
    if ($LASTEXITCODE -ne 0) {
        Write-Host "‚ö†Ô∏è  –ü—Ä–µ–¥—É–ø—Ä–µ–∂–¥–µ–Ω–∏–µ: –æ—à–∏–±–∫–∞ –ø—Ä–∏–º–µ–Ω–µ–Ω–∏—è –º–∏–≥—Ä–∞—Ü–∏–π" -ForegroundColor Yellow
    }
}

# –®–∞–≥ 6: –ó–∞–ø—É—Å–∫ FastAPI —Å–µ—Ä–≤–µ—Ä–∞ (–æ–ø—Ü–∏–æ–Ω–∞–ª—å–Ω–æ, –≤ —Ñ–æ–Ω–µ)
if (-not $Silent) { 
    Write-Host "üåê –ì–æ—Ç–æ–≤ –∫ –∑–∞–ø—É—Å–∫—É FastAPI —Å–µ—Ä–≤–µ—Ä–∞..." -ForegroundColor Green
    Write-Host "üí° –î–ª—è –∑–∞–ø—É—Å–∫–∞ API –≤—ã–ø–æ–ª–Ω–∏—Ç–µ: uvicorn app.main:app --host 0.0.0.0 --port 8008" -ForegroundColor Cyan
}

# –°–æ–∑–¥–∞–Ω–∏–µ —Ñ–∞–π–ª–∞ —Å—Ç–∞—Ç—É—Å–∞ –≥–æ—Ç–æ–≤–Ω–æ—Å—Ç–∏
$statusFile = Join-Path $projectRoot.Path "postgres_data\.system_ready"
Get-Date | Out-File -FilePath $statusFile -Encoding UTF8

if (-not $Silent) {
    Write-Host ""
    Write-Host "üéâ –°–ò–°–¢–ï–ú–ê –ú–ò–ö–†–û–°–ï–†–í–ò–°–ê –ì–û–¢–û–í–ê –ö –†–ê–ë–û–¢–ï!" -ForegroundColor Green -BackgroundColor Black
    Write-Host "üìä –°—Ç–∞—Ç—É—Å –±–∞–∑—ã –¥–∞–Ω–Ω—ã—Ö: –ì–û–¢–û–í–ê" -ForegroundColor Green
    Write-Host "üîó API –±—É–¥–µ—Ç –¥–æ—Å—Ç—É–ø–µ–Ω –Ω–∞: http://localhost:8008" -ForegroundColor Cyan
    Write-Host "üìñ –î–æ–∫—É–º–µ–Ω—Ç–∞—Ü–∏—è: http://localhost:8008/docs" -ForegroundColor Cyan
}

exit 0
'@ | Out-File -FilePath ".\postgres_data\scripts\startup_system.ps1" -Encoding UTF8

Write-Host "‚úÖ –ì–ª–∞–≤–Ω—ã–π —Å–∫—Ä–∏–ø—Ç –∞–≤—Ç–æ–∑–∞–ø—É—Å–∫–∞ —Å–æ–∑–¥–∞–Ω"
